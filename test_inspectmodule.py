# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).
# Please check them before you use them.
import pytest
import inspectmodule as module_0
import builtins as module_1
import enum as module_2
import py2puml.domain.umlrelation as module_3
import inspect as module_4
import types
import py2puml.domain.umlitem as module_5


def test_case_0():
    none_type_0 = None
    var_0 = module_0.inspect_module(none_type_0, none_type_0, none_type_0, none_type_0)


def test_case_1():
    type_0 = module_1.bytes
    str_0 = "L7`+;7TiHFZlfMM\n=g|)"
    var_0 = module_0.inspect_module(type_0, str_0, type_0, type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    type_0 = module_2.Enum
    str_0 = "conjugate"
    module_0.inspect_domain_definition(type_0, str_0, str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    type_0 = module_1.float
    str_0 = "@Zx_2<P"
    module_0.inspect_domain_definition(type_0, str_0, str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 1
    dict_0 = {}
    list_0 = []
    none_type_0 = None
    var_0 = module_0.inspect_module(list_0, none_type_0, list_0, list_0)
    var_1 = module_0.inspect_module(int_0, int_0, dict_0, list_0)
    type_0 = module_3.UmlRelation
    str_0 = "}5["
    var_2 = module_4.isclass(str_0)
    module_0.inspect_domain_definition(type_0, var_2, list_0, var_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\x7f\x96\x1f\x9f\xf7"
    str_0 = "real"
    iterable_0 = module_0.filter_domain_definitions(bytes_0, str_0)
    type_0 = module_1.object
    str_1 = ""
    list_0 = []
    module_0.inspect_module(type_0, str_1, str_1, list_0)

def test_case_6():
    var_0 = module_0.inspect_module(module_1, "", {}, [])


def test_case_7():
    type_0 = module_2.Enum
    var_0 = module_0.inspect_domain_definition(type_0, "", {}, [])


def test_case_8():
    type_0 = module_3.UmlRelation
    var_0 = module_0.inspect_domain_definition(type_0, "", {}, [])


def test_case_9():
    type_0 = types.ModuleType
    var_0 = module_0.inspect_domain_definition(type_0, "", {}, [])


def test_case_10():
    type_0 = module_5.UmlItem
    var_0 = module_0.inspect_domain_definition(type_0, "", {}, [])


def test_case_11():
    var_0 = module_0.inspect_module(module_4, "", {}, [])


def test_case_12():
    var_0 = module_0.inspect_module(module_5, "", {}, [])


def test_case_13():
    type_0 = module_1.int
    var_0 = module_0.inspect_domain_definition(type_0, "", {}, [])


def test_case_14():
    type_0 = module_1.str
    var_0 = module_0.inspect_domain_definition(type_0, "", {}, [])


def test_case_15():
    type_0 = module_1.dict
    var_0 = module_0.inspect_domain_definition(type_0, "", {}, [])
    
def test_case_16():
    var_0 = module_0.inspect_module(module_1, "", {}, [])

def test_case_17():
    var_0 = module_0.inspect_module(module_2, "", {}, [])

def test_case_18():
    var_0 = module_0.inspect_module(module_3, "", {}, [])

def test_case_19():
    var_0 = module_0.inspect_module(module_4, "", {}, [])

def test_case_20():
    var_0 = module_0.inspect_domain_definition(module_1.object, "", {}, [])

def test_case_21():
    var_0 = module_0.inspect_domain_definition(module_2.Enum, "", {}, [])

def test_case_22():
    var_0 = module_0.inspect_domain_definition(module_3.UmlRelation, "", {}, [])

def test_case_23():
    var_0 = module_0.filter_domain_definitions(module_1, "")

def test_case_24():
    var_0 = module_0.filter_domain_definitions(module_2, "")

def test_case_25():
    var_0 = module_0.filter_domain_definitions(module_3, "")

def test_case_26():
    var_0 = module_0.filter_domain_definitions(module_4, "")

def test_case_27():
    var_0 = module_0.filter_domain_definitions(module_1, "builtins")

def test_case_28():
    var_0 = module_0.filter_domain_definitions(module_2, "enum")

def test_case_29():
    var_0 = module_0.filter_domain_definitions(module_3, "py2puml.domain.umlrelation")

def test_case_30():
    var_0 = module_0.filter_domain_definitions(module_4, "inspect")

def test_case_31():
    var_0 = module_0.inspect_module(module_1, "builtins", {}, [])

def test_case_32():
    var_0 = module_0.inspect_module(module_2, "enum", {}, [])

def test_case_33():
    var_0 = module_0.inspect_module(module_3, "py2puml.domain.umlrelation", {}, [])

def test_case_34():
    var_0 = module_0.inspect_module(module_4, "inspect", {}, [])

def test_case_35():
    var_0 = module_0.inspect_domain_definition(module_1.object, "builtins", {}, [])

def test_case_36():
    var_0 = module_0.inspect_domain_definition(module_2.Enum, "enum", {}, [])

def test_case_37():
    var_0 = module_0.inspect_domain_definition(module_3.UmlRelation, "py2puml.domain.umlrelation", {}, [])

def test_case_38():
    var_0 = module_0.filter_domain_definitions(module_1, "object")

def test_case_39():
    var_0 = module_0.filter_domain_definitions(module_2, "Enum")

def test_case_40():
    var_0 = module_0.filter_domain_definitions(module_3, "UmlRelation")

def test_case_41():
    var_0 = module_0.filter_domain_definitions(module_4, "isclass")

def test_case_42():
    var_0 = module_0.filter_domain_definitions(module_1, "int")

def test_case_43():
    var_0 = module_0.filter_domain_definitions(module_2, "IntEnum")

def test_case_44():
    var_0 = module_0.filter_domain_definitions(module_3, "UmlClass")

def test_case_45():
    var_0 = module_0.filter_domain_definitions(module_4, "isfunction")

def test_case_46():
    var_0 = module_0.inspect_domain_definition(module_1.int, "builtins", {}, [])

def test_case_47():
    var_0 = module_0.inspect_domain_definition(module_2.IntEnum, "enum", {}, [])

def test_case_48():
    class_to_inspect = module_3.UmlRelation
    var_0 = module_0.inspect_domain_definition(class_to_inspect, "py2puml.domain.umlrelation", {}, [])
def test_case_49():
    str_0 = "aaaaaaaaaaa"
    class_to_inspect = types.ModuleType
    var_0 = module_0.inspect_domain_definition(class_to_inspect, "inspect", {}, [])


def test_case_50():
    var_0 = module_0.inspect_module(module_1, "builtins", {"key": "value"}, ["item"])
