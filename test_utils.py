# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).
# Please check them before you use them.
import pytest
import builtins as module_0
import utils as module_1


def test_case_0():
    type_0 = module_0.str
    var_0 = module_1.investigate_domain_definition(type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    type_0 = module_0.str
    var_0 = module_1.investigate_domain_definition(type_0)
    dict_0 = {}
    module_1.investigate_domain_definition(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = ["asd","asdasd"]
    none_type_1 = none_type_0.str
    module_1.investigate_domain_definition(none_type_0)

def test_case_3():
    type_0 = module_0.str
    var = module_1.investigate_domain_definition(type_0)
    
def test_case_4():
    type_0 = module_0.int
    module_1.investigate_domain_definition(type_0)

def test_case_5():
    type_0 = module_0.float
    module_1.investigate_domain_definition(type_0)

def test_case_6():
    type_0 = module_0.list
    module_1.investigate_domain_definition(type_0)
    
@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "test"
    module_1.investigate_domain_definition(str_0)
    
def test_case_8():
    type_0 = module_0.complex
    module_1.investigate_domain_definition(type_0)

def test_case_9():
    type_0 = module_0.tuple
    module_1.investigate_domain_definition(type_0)
    
def test_case_10():
    type_0 = module_0.range
    module_1.investigate_domain_definition(type_0)
    
def test_case_11():
    type_0 = module_0.dict
    module_1.investigate_domain_definition(type_0)
    
def test_case_12():
    type_0 = module_0.set
    module_1.investigate_domain_definition(type_0)
    
def test_case_13():
    type_0 = module_0.frozenset
    module_1.investigate_domain_definition(type_0)
    
def test_case_14():
    type_0 = module_0.bool
    module_1.investigate_domain_definition(type_0)
    
def test_case_15():
    type_0 = module_0.bytes
    module_1.investigate_domain_definition(type_0)
    
def test_case_16():
    type_0 = module_0.bytearray
    module_1.investigate_domain_definition(type_0)

def test_case_17():
    type_0 = module_0.memoryview
    module_1.investigate_domain_definition(type_0)
    
@pytest.mark.xfail(strict=True)
def test_case_18():
    type_0 = "str"
    module_1.investigate_domain_definition(type_0)

@pytest.mark.xfail(strict=True)
def test_case_19():
    type_0 = 111
    module_1.investigate_domain_definition(type_0)

@pytest.mark.xfail(strict=True)
def test_case_20():
    type_0 = ["str","int"]
    module_0.type_0
    module_1.investigate_domain_definition(type_0)
    
@pytest.mark.xfail(strict=True)
def test_case_21():
    str_0 = "asdads"
    int_0 = 123
    type_0 = {str_0,int_0}
    module_1.investigate_domain_definition(type_0)
    
@pytest.mark.xfail(strict=True)
def test_case_22():
    type_0 = True
    module_1.investigate_domain_definition(type_0)
    
@pytest.mark.xfail(strict=True)
def test_case_23():
    type_0 = ["123","abc","qwe"]
    module_1.investigate_domain_definition(type_0)
    
@pytest.mark.xfail(strict=True)
def test_case_24():
    int_0 = 111
    int_1 = 222
    str_0 = "333"
    list_0 = [int_0,int_1,str_0]
    module_1.investigate_domain_definition(list_0)
    
def test_case_25():
    type_0 = module_0.UnicodeError
    module_1.investigate_domain_definition(type_0)

def test_case_26():
    type_0 = module_0.UnicodeDecodeError
    module_1.investigate_domain_definition(type_0)

def test_case_27():
    type_0 = module_0.UnicodeEncodeError
    module_1.investigate_domain_definition(type_0)

def test_case_28():
    type_0 = module_0.UnicodeTranslateError
    module_1.investigate_domain_definition(type_0)

def test_case_29():
    type_0 = module_0.Warning
    module_1.investigate_domain_definition(type_0)

def test_case_30():
    type_0 = module_0.UserWarning
    module_1.investigate_domain_definition(type_0)

def test_case_31():
    type_0 = module_0.PendingDeprecationWarning
    module_1.investigate_domain_definition(type_0)

def test_case_32():
    type_0 = module_0.SyntaxWarning
    module_1.investigate_domain_definition(type_0)

def test_case_33():
    type_0 = module_0.RuntimeWarning
    module_1.investigate_domain_definition(type_0)

def test_case_34():
    type_0 = module_0.FutureWarning
    module_1.investigate_domain_definition(type_0)

def test_case_35():
    type_0 = module_0.ImportWarning
    module_1.investigate_domain_definition(type_0)

def test_case_36():
    type_0 = module_0.UnicodeWarning
    module_1.investigate_domain_definition(type_0)

def test_case_37():
    type_0 = module_0.BytesWarning
    module_1.investigate_domain_definition(type_0)

def test_case_38():
    type_0 = module_0.BufferError
    module_1.investigate_domain_definition(type_0)

def test_case_39():
    type_0 = module_0.ArithmeticError
    module_1.investigate_domain_definition(type_0)

def test_case_40():
    type_0 = module_0.FloatingPointError
    module_1.investigate_domain_definition(type_0)

def test_case_41():
    type_0 = module_0.OverflowError
    module_1.investigate_domain_definition(type_0)

def test_case_42():
    type_0 = module_0.ZeroDivisionError
    module_1.investigate_domain_definition(type_0)

def test_case_43():
    type_0 = module_0.SystemError
    module_1.investigate_domain_definition(type_0)

def test_case_44():
    type_0 = module_0.ReferenceError
    module_1.investigate_domain_definition(type_0)

def test_case_45():
    type_0 = module_0.SystemExit
    module_1.investigate_domain_definition(type_0)

def test_case_46():
    type_0 = module_0.KeyboardInterrupt
    module_1.investigate_domain_definition(type_0)

def test_case_47():
    type_0 = module_0.GeneratorExit
    module_1.investigate_domain_definition(type_0)

def test_case_48():
    type_0 = module_0.Exception
    module_1.investigate_domain_definition(type_0)

def test_case_49():
    type_0 = module_0.StopIteration
    module_1.investigate_domain_definition(type_0)

def test_case_50():
    type_0 = module_0.StopAsyncIteration
    module_1.investigate_domain_definition(type_0)
